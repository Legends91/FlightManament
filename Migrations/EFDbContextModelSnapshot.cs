// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLBH;

#nullable disable

namespace QLBH.Migrations
{
    [DbContext(typeof(EFDbContext))]
    partial class EFDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QLBH.Models.Category", b =>
                {
                    b.Property<long>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1L,
                            CategoryName = "Máy bay hạng trung"
                        },
                        new
                        {
                            CategoryID = 2L,
                            CategoryName = "Máy bay hạng rộng mở rộng"
                        },
                        new
                        {
                            CategoryID = 3L,
                            CategoryName = "Máy bay hạng nhẹ"
                        },
                        new
                        {
                            CategoryID = 4L,
                            CategoryName = "Máy bay hạng rộng"
                        },
                        new
                        {
                            CategoryID = 5L,
                            CategoryName = "Máy bay kỹ thuật số"
                        });
                });

            modelBuilder.Entity("QLBH.Models.ChuyenBay", b =>
                {
                    b.Property<long>("ChuyenBayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ChuyenBayID"));

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("SanBayDen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SanBayDi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SanBaysSanBayID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan>("ThoiGianDen")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ThoiGianDi")
                        .HasColumnType("time");

                    b.HasKey("ChuyenBayID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SanBaysSanBayID");

                    b.ToTable("ChuyenBays");

                    b.HasData(
                        new
                        {
                            ChuyenBayID = 1L,
                            ProductID = 8L,
                            SanBayDen = "SG",
                            SanBayDi = "HN",
                            ThoiGianDen = new TimeSpan(0, 9, 0, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 7, 15, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 2L,
                            ProductID = 11L,
                            SanBayDen = "HUE",
                            SanBayDi = "DN",
                            ThoiGianDen = new TimeSpan(0, 19, 30, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 3L,
                            ProductID = 7L,
                            SanBayDen = "HN",
                            SanBayDi = "HP",
                            ThoiGianDen = new TimeSpan(0, 7, 0, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 5, 30, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 4L,
                            ProductID = 1L,
                            SanBayDen = "HUE",
                            SanBayDi = "SG",
                            ThoiGianDen = new TimeSpan(0, 22, 0, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 20, 30, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 5L,
                            ProductID = 15L,
                            SanBayDen = "DN",
                            SanBayDi = "KG",
                            ThoiGianDen = new TimeSpan(0, 15, 0, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 6L,
                            ProductID = 14L,
                            SanBayDen = "KG",
                            SanBayDi = "HUE",
                            ThoiGianDen = new TimeSpan(0, 13, 0, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 11, 30, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 7L,
                            ProductID = 15L,
                            SanBayDen = "HN",
                            SanBayDi = "HUE",
                            ThoiGianDen = new TimeSpan(0, 17, 0, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 15, 30, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 8L,
                            ProductID = 1L,
                            SanBayDen = "DN",
                            SanBayDi = "SG",
                            ThoiGianDen = new TimeSpan(0, 10, 0, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 9L,
                            ProductID = 9L,
                            SanBayDen = "HP",
                            SanBayDi = "KG",
                            ThoiGianDen = new TimeSpan(0, 14, 30, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 10L,
                            ProductID = 7L,
                            SanBayDen = "HP",
                            SanBayDi = "DN",
                            ThoiGianDen = new TimeSpan(0, 8, 30, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 6, 30, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 11L,
                            ProductID = 15L,
                            SanBayDen = "SG",
                            SanBayDi = "HP",
                            ThoiGianDen = new TimeSpan(0, 12, 30, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 12L,
                            ProductID = 8L,
                            SanBayDen = "SG",
                            SanBayDi = "HUE",
                            ThoiGianDen = new TimeSpan(0, 23, 30, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 21, 30, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 13L,
                            ProductID = 7L,
                            SanBayDen = "DN",
                            SanBayDi = "HN",
                            ThoiGianDen = new TimeSpan(0, 1, 30, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 23, 0, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 14L,
                            ProductID = 6L,
                            SanBayDen = "SG",
                            SanBayDi = "KG",
                            ThoiGianDen = new TimeSpan(0, 5, 30, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 4, 0, 0, 0)
                        },
                        new
                        {
                            ChuyenBayID = 15L,
                            ProductID = 3L,
                            SanBayDen = "HUE",
                            SanBayDi = "HP",
                            ThoiGianDen = new TimeSpan(0, 20, 30, 0, 0),
                            ThoiGianDi = new TimeSpan(0, 19, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("QLBH.Models.Customer", b =>
                {
                    b.Property<long>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CustomerID"));

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("date");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1L,
                            BirthDay = new DateTime(2000, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "012345678901",
                            Email = "NguyenVanT@gmail.com",
                            Gender = false,
                            Name = "Nguyễn Văn Thơ",
                            Phone = "0757294361"
                        },
                        new
                        {
                            CustomerID = 2L,
                            BirthDay = new DateTime(1999, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "068903241849",
                            Email = "THNT56565@email.com",
                            Gender = true,
                            Name = "Trần Thị Hồng Ngọc",
                            Phone = "0989102574"
                        },
                        new
                        {
                            CustomerID = 3L,
                            BirthDay = new DateTime(1987, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "054321319302",
                            Email = "LeQuocSong@gmail.com",
                            Gender = true,
                            Name = "Lê Quốc Ca",
                            Phone = "0343671829"
                        },
                        new
                        {
                            CustomerID = 4L,
                            BirthDay = new DateTime(2001, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "097654810294",
                            Email = "PhamAnhCope@email.com",
                            Gender = true,
                            Name = "Phạm Anh Đồng",
                            Phone = "0460492715"
                        },
                        new
                        {
                            CustomerID = 5L,
                            BirthDay = new DateTime(1995, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "024683719492",
                            Email = "HoangTHiBird@gmail.com",
                            Gender = true,
                            Name = "Hoàng Thị Én",
                            Phone = "0431568942"
                        },
                        new
                        {
                            CustomerID = 6L,
                            BirthDay = new DateTime(1996, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "015793819201",
                            Email = "VuMinhFea@email.com",
                            Gender = false,
                            Name = "Vũ Minh Phương",
                            Phone = "0520873456"
                        },
                        new
                        {
                            CustomerID = 7L,
                            BirthDay = new DateTime(1998, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "086420728192",
                            Email = "GiangBui@email.com",
                            Name = "Bùi Văn Giang",
                            Phone = "0678941320"
                        },
                        new
                        {
                            CustomerID = 8L,
                            BirthDay = new DateTime(1999, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "075314839292",
                            Email = "NgoThank@gmail.com",
                            Gender = false,
                            Name = "Ngô Thanh Huyền",
                            Phone = "0412456789"
                        },
                        new
                        {
                            CustomerID = 9L,
                            BirthDay = new DateTime(1994, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "062082738592",
                            Email = "ThuThao123@email.com",
                            Gender = true,
                            Name = "Đặng Thu Thảo",
                            Phone = "0793502748"
                        },
                        new
                        {
                            CustomerID = 10L,
                            BirthDay = new DateTime(1993, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "031425928473",
                            Email = "TamTu@gmail.com",
                            Gender = true,
                            Name = "Trương Tâm Tú",
                            Phone = "0736251849"
                        },
                        new
                        {
                            CustomerID = 11L,
                            BirthDay = new DateTime(1992, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "076542819382",
                            Email = "HaiQuan@gmail.com",
                            Gender = true,
                            Name = "Lâm Quang Khải",
                            Phone = "0750781693"
                        },
                        new
                        {
                            CustomerID = 12L,
                            BirthDay = new DateTime(1997, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "020987371284",
                            Email = "LaiHo@email.com",
                            Gender = true,
                            Name = "Hồ Thị Lai",
                            Phone = "0568923147"
                        },
                        new
                        {
                            CustomerID = 13L,
                            BirthDay = new DateTime(1978, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "057898392012",
                            Email = "HoangMink@email.com",
                            Gender = false,
                            Name = "Đỗ Hoàng Minh",
                            Phone = "0424589310"
                        },
                        new
                        {
                            CustomerID = 14L,
                            BirthDay = new DateTime(2003, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "013404859402",
                            Email = "ChildNkee@gmail.com",
                            Gender = false,
                            Name = "Châu Minh Nhi",
                            Phone = "0371820394"
                        },
                        new
                        {
                            CustomerID = 15L,
                            BirthDay = new DateTime(2002, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "045672817492",
                            Email = "MaiTki@email.com",
                            Gender = true,
                            Name = "Mai Thị Oanh",
                            Phone = "0296047258"
                        },
                        new
                        {
                            CustomerID = 16L,
                            BirthDay = new DateTime(2000, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "09760385748",
                            Email = "PinkHappy@gmail.com",
                            Gender = false,
                            Name = "Nguyễn Hồng Phúc",
                            Phone = "0512345678"
                        },
                        new
                        {
                            CustomerID = 17L,
                            BirthDay = new DateTime(1984, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "05310758492",
                            Email = "LTTQuỳnh@email.com",
                            Gender = true,
                            Name = "Lê Thị thanh Quỳnh",
                            Phone = "0787463291"
                        },
                        new
                        {
                            CustomerID = 18L,
                            BirthDay = new DateTime(1980, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "068904657322",
                            Email = "ThanhPhanTea@gmail.com",
                            Gender = true,
                            Name = "Phan Thanh Trà",
                            Phone = "0953127964"
                        },
                        new
                        {
                            CustomerID = 19L,
                            BirthDay = new DateTime(1988, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "034567271392",
                            Email = "TranSVan@gmail.com",
                            Gender = true,
                            Name = "Trần Văn Sĩ",
                            Phone = "0974920518"
                        },
                        new
                        {
                            CustomerID = 20L,
                            BirthDay = new DateTime(1993, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "080121839201",
                            Email = "ILoveHN@gmail.com",
                            Gender = true,
                            Name = "Đinh Quốc Tuân",
                            Phone = "0938562914"
                        });
                });

            modelBuilder.Entity("QLBH.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmployeeID"));

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("Date");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("DayWork")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)");

                    b.Property<long>("RoleID")
                        .HasColumnType("bigint");

                    b.HasKey("EmployeeID");

                    b.HasIndex("RoleID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1L,
                            BirthDay = new DateTime(1993, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024793",
                            DayWork = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nva@email.com",
                            Gender = true,
                            Name = "Đỗ Bình An",
                            Password = "111",
                            Phone = "0987654321",
                            RoleID = 1L
                        },
                        new
                        {
                            EmployeeID = 2L,
                            BirthDay = new DateTime(1988, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024794",
                            DayWork = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ttb@email.com",
                            Gender = false,
                            Name = "Trần Thị Khánh Bâng",
                            Password = "111",
                            Phone = "0901234567",
                            RoleID = 2L
                        },
                        new
                        {
                            EmployeeID = 3L,
                            BirthDay = new DateTime(1980, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024795",
                            DayWork = new DateTime(2023, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lqc@email.com",
                            Gender = true,
                            Name = "Lê Quốc Cảnh",
                            Password = "111",
                            Phone = "0912345678",
                            RoleID = 2L
                        },
                        new
                        {
                            EmployeeID = 4L,
                            BirthDay = new DateTime(1984, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024796",
                            DayWork = new DateTime(2023, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pad@email.com",
                            Gender = true,
                            Name = "Phạm Anh Dũng",
                            Password = "111",
                            Phone = "0923456789",
                            RoleID = 3L
                        },
                        new
                        {
                            EmployeeID = 5L,
                            BirthDay = new DateTime(2000, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024797",
                            DayWork = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hte@email.com",
                            Gender = false,
                            Name = "Emily Hoàng Thị",
                            Password = "111",
                            Phone = "0934567890",
                            RoleID = 3L
                        },
                        new
                        {
                            EmployeeID = 6L,
                            BirthDay = new DateTime(2002, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024798",
                            DayWork = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vmf@email.com",
                            Gender = true,
                            Name = "Vũ Minh Toàn",
                            Password = "111",
                            Phone = "0945678901",
                            RoleID = 4L
                        },
                        new
                        {
                            EmployeeID = 7L,
                            BirthDay = new DateTime(2003, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024799",
                            DayWork = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bvng@email.com",
                            Gender = true,
                            Name = "Bùi Văn Nghị",
                            Password = "111",
                            Phone = "0956789012",
                            RoleID = 4L
                        },
                        new
                        {
                            EmployeeID = 8L,
                            BirthDay = new DateTime(1978, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024800",
                            DayWork = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nth@email.com",
                            Gender = true,
                            Name = "Hoàng Hưu Hảo",
                            Password = "111",
                            Phone = "0967890123",
                            RoleID = 5L
                        },
                        new
                        {
                            EmployeeID = 9L,
                            BirthDay = new DateTime(1997, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024801",
                            DayWork = new DateTime(2023, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dti@email.com",
                            Gender = false,
                            Name = "Đặng Thu Lam",
                            Password = "111",
                            Phone = "0978901234",
                            RoleID = 5L
                        },
                        new
                        {
                            EmployeeID = 10L,
                            BirthDay = new DateTime(1993, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024802",
                            DayWork = new DateTime(2023, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ttjudge@email.com",
                            Gender = false,
                            Name = "Trương Tâm Trạng",
                            Password = "111",
                            Phone = "0989012345",
                            RoleID = 5L
                        },
                        new
                        {
                            EmployeeID = 11L,
                            BirthDay = new DateTime(1994, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024803",
                            DayWork = new DateTime(2023, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lqk@email.com",
                            Gender = true,
                            Name = "Lâm Quang Lưu",
                            Password = "111",
                            Phone = "0990123456",
                            RoleID = 5L
                        },
                        new
                        {
                            EmployeeID = 12L,
                            BirthDay = new DateTime(1999, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024804",
                            DayWork = new DateTime(2003, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "htl@email.com",
                            Gender = false,
                            Name = "Hồ Thị Liên",
                            Password = "111",
                            Phone = "0901234567",
                            RoleID = 5L
                        },
                        new
                        {
                            EmployeeID = 13L,
                            BirthDay = new DateTime(1998, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024805",
                            DayWork = new DateTime(2024, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dhm@email.com",
                            Gender = true,
                            Name = "Đỗ Hoàng Hảo",
                            Password = "111",
                            Phone = "0912345678",
                            RoleID = 5L
                        },
                        new
                        {
                            EmployeeID = 14L,
                            BirthDay = new DateTime(1996, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024806",
                            DayWork = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cmn@email.com",
                            Gender = true,
                            Name = "Châu Minh Tiến",
                            Password = "111",
                            Phone = "0923456789",
                            RoleID = 5L
                        },
                        new
                        {
                            EmployeeID = 15L,
                            BirthDay = new DateTime(1995, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024807",
                            DayWork = new DateTime(2024, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mto@email.com",
                            Gender = false,
                            Name = "Mai Thị Thu Hoàng",
                            Password = "111",
                            Phone = "0934567890",
                            RoleID = 5L
                        },
                        new
                        {
                            EmployeeID = 16L,
                            BirthDay = new DateTime(2001, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CCCD = "079203024808",
                            DayWork = new DateTime(2024, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nhp@email.com",
                            Gender = false,
                            Name = "Nguyễn Hồng",
                            Password = "111",
                            Phone = "0945678901",
                            RoleID = 5L
                        });
                });

            modelBuilder.Entity("QLBH.Models.OrderTicket", b =>
                {
                    b.Property<long>("OrderTicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderTicketID"));

                    b.Property<long>("ChuyenBayID")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderTicketID");

                    b.HasIndex("ChuyenBayID");

                    b.HasIndex("CustomerID");

                    b.ToTable("OrderTickets");

                    b.HasData(
                        new
                        {
                            OrderTicketID = 1L,
                            ChuyenBayID = 1L,
                            CustomerID = 1L,
                            Description = "khách không ăn thịt đỏ",
                            OrderDate = new DateTime(2023, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 2L,
                            ChuyenBayID = 1L,
                            CustomerID = 2L,
                            Description = "Khách ăn chay",
                            OrderDate = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 3L,
                            ChuyenBayID = 2L,
                            CustomerID = 3L,
                            Description = "Khách có vấn đề về thận (bạn Én)",
                            OrderDate = new DateTime(2023, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 4L,
                            ChuyenBayID = 2L,
                            CustomerID = 4L,
                            Description = "Khách VIP",
                            OrderDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 5L,
                            ChuyenBayID = 7L,
                            CustomerID = 5L,
                            Description = "Khách ăn chay",
                            OrderDate = new DateTime(2023, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 6L,
                            ChuyenBayID = 10L,
                            CustomerID = 6L,
                            Description = "Khách là người già cần hỗ trợ kỹ lưỡng",
                            OrderDate = new DateTime(2023, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 7L,
                            ChuyenBayID = 15L,
                            CustomerID = 7L,
                            Description = "Khách ăn chay",
                            OrderDate = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 8L,
                            ChuyenBayID = 8L,
                            CustomerID = 8L,
                            Description = "Khách không ăn thịt đỏ",
                            OrderDate = new DateTime(2023, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 9L,
                            ChuyenBayID = 9L,
                            CustomerID = 9L,
                            Description = "Khách ăn chay",
                            OrderDate = new DateTime(2023, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 10L,
                            ChuyenBayID = 14L,
                            CustomerID = 10L,
                            Description = "Khách VIP",
                            OrderDate = new DateTime(2023, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 11L,
                            ChuyenBayID = 1L,
                            CustomerID = 11L,
                            Description = "Khách VIP",
                            OrderDate = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 12L,
                            ChuyenBayID = 4L,
                            CustomerID = 12L,
                            Description = "Khách VIP",
                            OrderDate = new DateTime(2023, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 13L,
                            ChuyenBayID = 11L,
                            CustomerID = 13L,
                            Description = "Khách không ăn thịt đỏ",
                            OrderDate = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 14L,
                            ChuyenBayID = 12L,
                            CustomerID = 14L,
                            Description = "Khách mang thai",
                            OrderDate = new DateTime(2023, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderTicketID = 15L,
                            ChuyenBayID = 8L,
                            CustomerID = 15L,
                            Description = "Khách ăn chay",
                            OrderDate = new DateTime(2023, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("QLBH.Models.OrderTicketDetail", b =>
                {
                    b.Property<long>("OrderTicketDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderTicketDetailID"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("Date");

                    b.Property<long>("OrderTicketID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<long>("TicketID")
                        .HasColumnType("bigint");

                    b.HasKey("OrderTicketDetailID");

                    b.HasIndex("OrderTicketID");

                    b.HasIndex("TicketID");

                    b.ToTable("OrderTicketDetails");

                    b.HasData(
                        new
                        {
                            OrderTicketDetailID = 1L,
                            OrderDate = new DateTime(2023, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 1L,
                            Price = 500.000m,
                            Quantity = 1,
                            Status = true,
                            TicketID = 1L
                        },
                        new
                        {
                            OrderTicketDetailID = 2L,
                            OrderDate = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 2L,
                            Price = 500.000m,
                            Quantity = 3,
                            Status = true,
                            TicketID = 1L
                        },
                        new
                        {
                            OrderTicketDetailID = 3L,
                            OrderDate = new DateTime(2023, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 3L,
                            Price = 350.000m,
                            Quantity = 1,
                            Status = false,
                            TicketID = 2L
                        },
                        new
                        {
                            OrderTicketDetailID = 4L,
                            OrderDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 4L,
                            Price = 400.000m,
                            Quantity = 1,
                            Status = true,
                            TicketID = 11L
                        },
                        new
                        {
                            OrderTicketDetailID = 5L,
                            OrderDate = new DateTime(2023, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 5L,
                            Price = 300.000m,
                            Quantity = 1,
                            Status = true,
                            TicketID = 9L
                        },
                        new
                        {
                            OrderTicketDetailID = 6L,
                            OrderDate = new DateTime(2023, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 6L,
                            Price = 200.000m,
                            Quantity = 1,
                            Status = false,
                            TicketID = 7L
                        },
                        new
                        {
                            OrderTicketDetailID = 7L,
                            OrderDate = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 7L,
                            Price = 350.000m,
                            Quantity = 4,
                            Status = true,
                            TicketID = 2L
                        },
                        new
                        {
                            OrderTicketDetailID = 8L,
                            OrderDate = new DateTime(2023, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 8L,
                            Price = 450.000m,
                            Quantity = 1,
                            Status = true,
                            TicketID = 5L
                        },
                        new
                        {
                            OrderTicketDetailID = 9L,
                            OrderDate = new DateTime(2023, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 9L,
                            Price = 220.000m,
                            Quantity = 1,
                            Status = false,
                            TicketID = 12L
                        },
                        new
                        {
                            OrderTicketDetailID = 10L,
                            OrderDate = new DateTime(2023, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 10L,
                            Price = 1000.000m,
                            Quantity = 1,
                            Status = true,
                            TicketID = 13L
                        },
                        new
                        {
                            OrderTicketDetailID = 11L,
                            OrderDate = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 11L,
                            Price = 220.000m,
                            Quantity = 1,
                            Status = true,
                            TicketID = 12L
                        },
                        new
                        {
                            OrderTicketDetailID = 12L,
                            OrderDate = new DateTime(2023, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 12L,
                            Price = 500.000m,
                            Quantity = 1,
                            Status = true,
                            TicketID = 1L
                        },
                        new
                        {
                            OrderTicketDetailID = 13L,
                            OrderDate = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 13L,
                            Price = 700.000m,
                            Quantity = 1,
                            Status = false,
                            TicketID = 6L
                        },
                        new
                        {
                            OrderTicketDetailID = 14L,
                            OrderDate = new DateTime(2023, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 14L,
                            Price = 300.000m,
                            Quantity = 2,
                            Status = true,
                            TicketID = 9L
                        },
                        new
                        {
                            OrderTicketDetailID = 15L,
                            OrderDate = new DateTime(2023, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTicketID = 15L,
                            Price = 2000.000m,
                            Quantity = 2,
                            Status = true,
                            TicketID = 8L
                        });
                });

            modelBuilder.Entity("QLBH.Models.Product", b =>
                {
                    b.Property<long>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductID"));

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageFile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1L,
                            CategoryID = 1L,
                            ImageFile = "1.png",
                            Manufacturer = "Airbus S.A.S",
                            Name = "Airbus A320",
                            Status = true
                        },
                        new
                        {
                            ProductID = 2L,
                            CategoryID = 1L,
                            ImageFile = "2.png",
                            Manufacturer = "Airbus S.A.S",
                            Name = "Airbus A321",
                            Status = true
                        },
                        new
                        {
                            ProductID = 3L,
                            CategoryID = 2L,
                            ImageFile = "3.png",
                            Manufacturer = "Boeing",
                            Name = "Boeing 787-9",
                            Status = true
                        },
                        new
                        {
                            ProductID = 4L,
                            CategoryID = 3L,
                            ImageFile = "4.png",
                            Manufacturer = "Embraer",
                            Name = "Embraer E-Jet - E170",
                            Status = false
                        },
                        new
                        {
                            ProductID = 5L,
                            CategoryID = 4L,
                            ImageFile = "5.png",
                            Manufacturer = "Boeing",
                            Name = "Boeing 767-300",
                            Status = false
                        },
                        new
                        {
                            ProductID = 6L,
                            CategoryID = 4L,
                            ImageFile = "6.png",
                            Manufacturer = "Airbus S.A.S",
                            Name = "Airbus A330-200",
                            Status = true
                        },
                        new
                        {
                            ProductID = 7L,
                            CategoryID = 4L,
                            ImageFile = "7.png",
                            Manufacturer = "Boeing",
                            Name = "Boeing 777-200",
                            Status = true
                        },
                        new
                        {
                            ProductID = 8L,
                            CategoryID = 3L,
                            ImageFile = "8.png",
                            Manufacturer = "Embraer",
                            Name = "Embraer E-Jet - E175",
                            Status = true
                        },
                        new
                        {
                            ProductID = 9L,
                            CategoryID = 4L,
                            ImageFile = "9.png",
                            Manufacturer = "Airbus S.A.S",
                            Name = "Airbus A330-300",
                            Status = true
                        },
                        new
                        {
                            ProductID = 10L,
                            CategoryID = 3L,
                            ImageFile = "10.png",
                            Manufacturer = "Embraer",
                            Name = "Embraer E-Jet - E190",
                            Status = true
                        },
                        new
                        {
                            ProductID = 11L,
                            CategoryID = 2L,
                            ImageFile = "11.png",
                            Manufacturer = "Airbus S.A.S",
                            Name = "Airbus A350 - 900",
                            Status = true
                        },
                        new
                        {
                            ProductID = 12L,
                            CategoryID = 3L,
                            ImageFile = "12.png",
                            Manufacturer = "Embraer",
                            Name = "Embraer E-Jet E-195",
                            Status = true
                        },
                        new
                        {
                            ProductID = 13L,
                            CategoryID = 5L,
                            ImageFile = "13.png",
                            Manufacturer = "China Eastern Airlines",
                            Name = "COMAC C919",
                            Status = false
                        },
                        new
                        {
                            ProductID = 14L,
                            CategoryID = 2L,
                            ImageFile = "14.png",
                            Manufacturer = "Airbus S.A.S",
                            Name = "Airbus A350 - 1000",
                            Status = true
                        },
                        new
                        {
                            ProductID = 15L,
                            CategoryID = 3L,
                            ImageFile = "15.png",
                            Manufacturer = "Air Mekong",
                            Name = "Bombardier CRJ-200",
                            Status = true
                        });
                });

            modelBuilder.Entity("QLBH.Models.Role", b =>
                {
                    b.Property<long>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoleID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1L,
                            Name = "Tổng quản lý"
                        },
                        new
                        {
                            RoleID = 2L,
                            Name = "Quản lý chuyến bay"
                        },
                        new
                        {
                            RoleID = 3L,
                            Name = "Quản lý phi công"
                        },
                        new
                        {
                            RoleID = 4L,
                            Name = "Quản lý hành khách"
                        },
                        new
                        {
                            RoleID = 5L,
                            Name = "Phi công"
                        });
                });

            modelBuilder.Entity("QLBH.Models.SanBay", b =>
                {
                    b.Property<string>("SanBayID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenSanBay")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SanBayID");

                    b.ToTable("SanBays");

                    b.HasData(
                        new
                        {
                            SanBayID = "HN",
                            Address = "Hà Nội",
                            TenSanBay = "Quốc Tế Nội Bài"
                        },
                        new
                        {
                            SanBayID = "SG",
                            Address = "TP HCM",
                            TenSanBay = "Quốc Tế Tân Sân Nhất"
                        },
                        new
                        {
                            SanBayID = "DN",
                            Address = "Đà Nẵng",
                            TenSanBay = "Quốc Tế Đà Nẵng"
                        },
                        new
                        {
                            SanBayID = "KG",
                            Address = "Kiên Giang",
                            TenSanBay = "Quốc Tế Phú Quốc"
                        },
                        new
                        {
                            SanBayID = "HP",
                            Address = "Hải Phòng",
                            TenSanBay = "Quốc Tế Cát Bi"
                        },
                        new
                        {
                            SanBayID = "HUE",
                            Address = "Huế",
                            TenSanBay = "Quốc Tế Phú Bài"
                        });
                });

            modelBuilder.Entity("QLBH.Models.Ticket", b =>
                {
                    b.Property<long>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TicketID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("TicketID");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketID = 1L,
                            Name = "Vé Thường",
                            Price = 500.000m
                        },
                        new
                        {
                            TicketID = 2L,
                            Name = "Vé Phổ Thông",
                            Price = 350.000m
                        },
                        new
                        {
                            TicketID = 3L,
                            Name = "Vé Kinh Doanh",
                            Price = 800.000m
                        },
                        new
                        {
                            TicketID = 4L,
                            Name = "Vé Hạng Nhất",
                            Price = 1500.000m
                        },
                        new
                        {
                            TicketID = 5L,
                            Name = "Vé Economic",
                            Price = 450.000m
                        },
                        new
                        {
                            TicketID = 6L,
                            Name = "Vé Premium Economy",
                            Price = 700.000m
                        },
                        new
                        {
                            TicketID = 7L,
                            Name = "Vé Business Class",
                            Price = 1200.000m
                        },
                        new
                        {
                            TicketID = 8L,
                            Name = "Vé First Class",
                            Price = 2000.000m
                        },
                        new
                        {
                            TicketID = 9L,
                            Name = "Vé Cơ Bản",
                            Price = 300.000m
                        },
                        new
                        {
                            TicketID = 10L,
                            Name = "Vé Tiết Kiệm",
                            Price = 250.000m
                        },
                        new
                        {
                            TicketID = 11L,
                            Name = "Vé Linh Hoạt",
                            Price = 400.000m
                        },
                        new
                        {
                            TicketID = 12L,
                            Name = "Vé Super Saver",
                            Price = 220.000m
                        },
                        new
                        {
                            TicketID = 13L,
                            Name = "Vé Thương Gia",
                            Price = 1000.000m
                        });
                });

            modelBuilder.Entity("QLBH.Models.ChuyenBay", b =>
                {
                    b.HasOne("QLBH.Models.Product", "Products")
                        .WithMany("ChuyenBays")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLBH.Models.SanBay", "SanBays")
                        .WithMany("ChuyenBays")
                        .HasForeignKey("SanBaysSanBayID");

                    b.Navigation("Products");

                    b.Navigation("SanBays");
                });

            modelBuilder.Entity("QLBH.Models.Employee", b =>
                {
                    b.HasOne("QLBH.Models.Role", "Roles")
                        .WithMany("Employees")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("QLBH.Models.OrderTicket", b =>
                {
                    b.HasOne("QLBH.Models.ChuyenBay", "ChuyenBays")
                        .WithMany("OrderTickets")
                        .HasForeignKey("ChuyenBayID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLBH.Models.Customer", "Customers")
                        .WithMany("OrderTickets")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuyenBays");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("QLBH.Models.OrderTicketDetail", b =>
                {
                    b.HasOne("QLBH.Models.OrderTicket", "OrderTickets")
                        .WithMany("OrderTicketDetails")
                        .HasForeignKey("OrderTicketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLBH.Models.Ticket", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderTickets");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("QLBH.Models.Product", b =>
                {
                    b.HasOne("QLBH.Models.Category", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("QLBH.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QLBH.Models.ChuyenBay", b =>
                {
                    b.Navigation("OrderTickets");
                });

            modelBuilder.Entity("QLBH.Models.Customer", b =>
                {
                    b.Navigation("OrderTickets");
                });

            modelBuilder.Entity("QLBH.Models.OrderTicket", b =>
                {
                    b.Navigation("OrderTicketDetails");
                });

            modelBuilder.Entity("QLBH.Models.Product", b =>
                {
                    b.Navigation("ChuyenBays");
                });

            modelBuilder.Entity("QLBH.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("QLBH.Models.SanBay", b =>
                {
                    b.Navigation("ChuyenBays");
                });
#pragma warning restore 612, 618
        }
    }
}
